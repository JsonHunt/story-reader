// Generated by CoffeeScript 1.9.0
(function() {
  var IndexController;

  module.exports = IndexController = function($scope, $location, $cordovaFile) {
    var wordsString;
    $scope.save = function(key, value) {
      return window.localStorage.setItem(key, JSON.stringify(value));
    };
    $scope.saveInt = function(key, value) {
      return window.localStorage.setItem(key, value);
    };
    $scope.load = function(key) {
      var value;
      value = window.localStorage.getItem(key);
      if (value === void 0) {
        return {};
      }
      return JSON.parse(value);
    };
    $scope.loadArray = function(key) {
      var value;
      value = window.localStorage.getItem(key);
      if (value === void 0) {
        return [];
      }
      return JSON.parse(value);
    };
    $scope.loadInt = function(key) {
      var value;
      value = window.localStorage.getItem(key);
      if (value === void 0) {
        return 0;
      }
      return parseInt(value);
    };
    $scope.getNextID = function() {
      var nextID;
      nextID = $scope.loadInt('nextID');
      $scope.saveInt('nextID', nextID + 1);
      return nextID;
    };
    console.log(JSON.stringify($scope.stories));
    wordsString = window.localStorage.getItem("words");
    if (wordsString == null) {
      wordsString = JSON.stringify([]);
    }
    $scope.allWords = JSON.parse(wordsString);
    window.addEventListener('native.keyboardshow', function(e) {
      return $scope.$apply(function() {
        return $scope.keyboard = true;
      });
    });
    window.addEventListener('native.keyboardhide', function(e) {
      return $scope.$apply(function() {
        return $scope.keyboard = false;
      });
    });
    $scope.goto = function(path) {
      return $location.path(path);
    };
    $scope.back = function() {
      return window.history.back();
    };
    if ($cordovaFile) {
      $cordovaFile.checkDir(cordova.file.externalDataDirectory, "story-reader-files").then(function(success) {
        return $scope.checkFiles();
      }, function(error) {
        if (error.message === 'NOT_FOUND_ERR') {
          return $cordovaFile.createDir(cordova.file.externalDataDirectory, "story-reader-files").then(function(success) {
            return $scope.checkFiles();
          }, function(error) {
            return console.log("Error: " + error);
          });
        } else {
          return console.log("Error checking for recording directory : " + JSON.stringify(error));
        }
      });
    }
    $scope.recordings = {};
    return $scope.checkFiles = function() {
      return window.resolveLocalFileSystemURL(cordova.file.externalDataDirectory + 'story-reader-files', function(fileEntry) {
        $scope.folderPath = fileEntry.toURL();
        return async.each($scope.allWords, function(w, cb) {
          var path;
          path = "story-reader-files/" + w + ".mp3";
          return $cordovaFile.checkFile(cordova.file.externalDataDirectory, path).then(function(success) {
            $scope.recordings[w.toLowerCase()] = success;
            return cb();
          }, function(error) {
            return cb();
          });
        }, function(err) {
          if (err) {
            return console.log(err);
          }
        });
      }, function(error) {
        return console.log("Error getting folder URL : " + JSON.stringify(error));
      });
    };
  };

  if (this.isPhoneGap) {
    IndexController.$inject = ['$scope', '$location', '$cordovaFile'];
  } else {
    IndexController.$inject = ['$scope', '$location'];
  }

}).call(this);
