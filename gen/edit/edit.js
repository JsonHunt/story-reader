// Generated by CoffeeScript 1.9.0
(function() {
  var EditController, storyParser;

  storyParser = require('./story-parser');

  module.exports = EditController = function($scope, $location, $routeParams) {
    var id, lastID;
    $('input.title').hide();
    $('.story').hide();
    setTimeout(function() {
      $('input.title').show();
      return $('.story').show();
    }, 50);
    id = parseInt($routeParams.id);
    if (id !== 0) {
      $scope.story = _.find($scope.stories, function(s) {
        return parseInt(s.id) === id;
      });
      if (!$scope.story) {
        goto('home');
        return;
      }
    } else {
      lastID = window.localStorage.getItem('lastID');
      if (lastID == null) {
        lastID = 0;
      }
      $scope.story = {
        id: parseInt(lastID) + 1
      };
    }
    console.log("STORY ID: " + $scope.story.id);
    $scope.titleEnter = function() {
      return $('.story').focus();
    };
    $scope.textEnter = function() {
      return $('.story').blur();
    };
    $scope.save = function() {
      var result, s, text, title, titlearr, w, _i, _j, _k, _len, _len1, _len2, _ref, _ref1;
      title = $scope.story.title;
      if (!title || title.length === 0) {
        $scope.error = "Title is required";
        return;
      } else {
        titlearr = title.split(' ');
        title = '';
        for (_i = 0, _len = titlearr.length; _i < _len; _i++) {
          w = titlearr[_i];
          title += S(w).capitalize().s + " ";
        }
        $scope.story.id = parseInt($scope.story.id);
        $scope.story.title = S(title).trim().s;
      }
      text = $scope.story.text;
      if (!text || text.length === 0) {
        $scope.error = "Story is too short!";
        return;
      }
      result = storyParser.parse($scope.story.text);
      $scope.story.sentences = result.sentences;
      text = '';
      _ref = result.sentences;
      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
        s = _ref[_j];
        _ref1 = s.words;
        for (_k = 0, _len2 = _ref1.length; _k < _len2; _k++) {
          w = _ref1[_k];
          text += w + ' ';
        }
      }
      $scope.story.text = text;
      if (id === 0) {
        $scope.stories.push($scope.story);
      }
      $scope.allWords = _.union($scope.allWords, result.words);
      window.localStorage.setItem('stories', JSON.stringify($scope.stories));
      window.localStorage.setItem('words', JSON.stringify($scope.allWords));
      window.localStorage.setItem('lastID', $scope.story.id);
      return $location.path("story/" + $scope.story.id + "/1/1");
    };
    return $scope["delete"] = function() {
      var i, s, _i, _len, _ref;
      id = parseInt($routeParams.id);
      if (id === 0) {
        $scope.goto('home');
        return;
      }
      _ref = $scope.stories;
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        s = _ref[i];
        if (s.id === $scope.story.id) {
          $scope.stories.splice(i, 1);
          window.localStorage.setItem('stories', JSON.stringify($scope.stories));
          break;
        }
      }
      return $scope.goto('home');
    };
  };

  EditController.$inject = ['$scope', '$location', '$routeParams'];

}).call(this);
