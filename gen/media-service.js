// Generated by CoffeeScript 1.9.0
(function() {
  var MediaService, fileService,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  fileService = require('./file-service');

  MediaService = (function() {
    function MediaService() {
      this.record = __bind(this.record, this);
      this.play = __bind(this.play, this);
    }

    MediaService.prototype.getURL = function(path) {
      return fileService.getURL(path);
    };

    MediaService.prototype.play = function(path, callback) {
      var done, url;
      url = fileService.getURL(path);
      done = (function(_this) {
        return function() {
          _this.stop();
          return callback();
        };
      })(this);
      this.media = new Media(url, done, done);
      this.media.play();
      return this.playing = path;
    };

    MediaService.prototype.record = function(path) {
      var done, url;
      url = fileService.getURL(path);
      done = (function(_this) {
        return function() {
          _this.stop();
          return callback();
        };
      })(this);
      this.media = new Media(url, done, done);
      this.media.startRecord();
      return this.recording = path;
    };

    MediaService.prototype.stop = function() {
      if (this.listening) {
        this.recognition.stop();
        delete this.listening;
      }
      if (this.media) {
        if (this.playing) {
          this.media.stop();
          delete this.playing;
        }
        if (this.recording) {
          this.media.stopRecord();
          delete this.recording;
        }
        this.media.release();
        return delete this.media;
      }
    };

    MediaService.prototype.listen = function(continuous, callback) {
      var e;
      try {
        this.stop();
        this.recognition = new SpeechRecognition();
        this.recognition.continuous = true;
        this.listening = true;
        this.lastResult = "";
        this.recognition.onresult = (function(_this) {
          return function(event) {
            var newResult, result;
            result = event.results[0][0].transcript;
            console.log("Result: " + result);
            newResult = result.substr(_this.lastResult.length);
            _this.lastResult = result;
            return callback(newResult);
          };
        })(this);
        this.recognition.onend = function(event) {
          return console.log("ended");
        };
        this.recognition.onnomatch = function(event) {
          return console.log("no match");
        };
        return this.recognition.start();
      } catch (_error) {
        e = _error;
        return console.log(e);
      }
    };

    return MediaService;

  })();

  module.exports = new MediaService();

}).call(this);
